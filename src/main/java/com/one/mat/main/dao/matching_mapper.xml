<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC	"-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<mapper namespace="com.one.mat.main.dao.MatchingDAO">

<!-- pro_idx 사용하기 위한 쿼리  -->
<select id="MyProfileListDo" resultType="com.one.mat.member.dto.ProfileDTO">
	SELECT *
FROM pro p
INNER JOIN breed b ON p.pro_idx = b.pro_idx
INNER JOIN breedtype bt ON b.breedType_code = bt.breedType_code where member_idx=#{member_idx}
</select>

<!-- 랜덤매칭 쿼리(자신의 pro_idx 는 제외하며 동주소가 같고, 
			제재여부=N,탈퇴여부=N 이고 성향이 4개 모두 같을 경우 select) -->
<select id="matchingList" resultType="map">
  SELECT
    m.member_gender,
    m.member_dongAddr,
    p.pro_dogName,
    p.pro_dogAge,
    p.pro_dogGender,
    p.pro_dogDesc,
    p.pro_idx
FROM member AS m
INNER JOIN pro AS p ON m.member_idx = p.member_idx
WHERE m.member_dongAddr = (SELECT member_dongAddr FROM member WHERE member_idx = #{param1})
    AND m.member_quit = 'N'
    AND m.member_loginLock = 'N'
    AND p.pro_idx NOT IN (
        SELECT pro_idx FROM pro WHERE member_idx = #{param1}
    )
    AND p.pro_idx IN (
        SELECT pro_idx
        FROM `char`
        WHERE charType_code IN (
            SELECT charType_code
            FROM `char`
            WHERE pro_idx = #{param2}
        )
        GROUP BY pro_idx
        HAVING COUNT(DISTINCT charType_code) = 4
    )
    AND m.member_idx != #{param1}
ORDER BY RAND()
LIMIT 10
</select>

<!-- 4가지의 성향 모두 일치하는 성향들을 가져오는 쿼리 -->
<select id="matchingCharType" resultType = "String">
	SELECT ct.charType
	FROM `char` c
	INNER JOIN chartype ct ON c.charType_code = ct.charType_code where c.pro_idx=#{pro_idx}
</select>

<!-- 매칭요청 보내기 쿼리문 -->
<insert id="homeSend" parameterType="map" >
	INSERT INTO `match` (pro_sendIdx ,pro_recvIdx) VALUES(#{pro_sendIdx},#{pro_recvIdx})
</insert>


<!-- 프로필 상세보기 쿼리문 -->
<select id="memberDetailListGO" resultType="map">
SELECT
    p.pro_dogName,
    p.pro_dogAge,
    p.pro_dogGender,
    p.pro_dogDesc,
    p.pro_dogScore,
    m.member_gender,
    m.member_dongAddr,
    m.member_nickName,
    bt.breedType
FROM pro AS p
JOIN member AS m ON p.member_idx = m.member_idx
LEFT JOIN breed AS b ON p.pro_idx = b.pro_idx
LEFT JOIN breedtype AS bt ON b.breedType_code = bt.breedType_code
WHERE p.pro_idx = #{param1};
</select>
<!-- <select id="matchingPhotoFileName" resultType = "String">
	SELECT pt.photo_fileName
	FROM pro p 
	INNER JOIN photo pt ON pt.photo_idfNum = p.pro_idx where pt.photo_type = 4 and p.pro_idx =#{pro_idx};
</select>
 -->

<!-- <select id="matchingListCharType" resultType="String">
select charType
from pro p
INNER JOIN `char` c ON p.pro_idx = c.pro_idx
INNER JOIN chartype ct ON c.charType_code = ct.charType_code where p.pro_idx=1;
</select> -->

</mapper>